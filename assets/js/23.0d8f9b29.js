(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{230:function(a,e,t){"use strict";t.r(e);var r=t(17),s=Object(r.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"常量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常量"}},[a._v("#")]),a._v(" 常量")]),a._v(" "),t("h2",{attrs:{id:"假-false"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#假-false"}},[a._v("#")]),a._v(" 假    False")]),a._v(" "),t("p",[t("em",[a._v("布尔值,假.")])]),a._v(" "),t("h2",{attrs:{id:"真-true"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#真-true"}},[a._v("#")]),a._v(" 真    True")]),a._v(" "),t("p",[t("em",[a._v("布尔值,真.")])]),a._v(" "),t("h2",{attrs:{id:"全部英雄-all-heroes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全部英雄-all-heroes"}},[a._v("#")]),a._v(" 全部英雄    All Heroes")]),a._v(" "),t("p",[t("em",[a._v("此数组包括了《守望先锋》中所有英雄.")])]),a._v(" "),t("h2",{attrs:{id:"全部重装英雄-all-tank-heroes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全部重装英雄-all-tank-heroes"}},[a._v("#")]),a._v(" 全部重装英雄    All Tank Heroes")]),a._v(" "),t("p",[t("em",[a._v("此数组包括了《守望先锋》中所有重装英雄.")])]),a._v(" "),t("h2",{attrs:{id:"全部支援英雄-all-support-heroes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全部支援英雄-all-support-heroes"}},[a._v("#")]),a._v(" 全部支援英雄    All Support Heroes")]),a._v(" "),t("p",[t("em",[a._v("此数组包括了《守望先锋》中所有支援英雄.")])]),a._v(" "),t("h2",{attrs:{id:"全部输出英雄-all-damage-heroes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全部输出英雄-all-damage-heroes"}},[a._v("#")]),a._v(" 全部输出英雄    All Damage Heroes")]),a._v(" "),t("p",[t("em",[a._v("此数组包括了《守望先锋》中所有输出英雄.")])]),a._v(" "),t("h2",{attrs:{id:"英雄图标字符串-hero-icon-string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#英雄图标字符串-hero-icon-string"}},[a._v("#")]),a._v(" 英雄图标字符串    Hero Icon String")]),a._v(" "),t("p",[t("em",[a._v("将一个英雄的参数转化为字符串并作为图标显示.")])]),a._v(" "),t("h2",{attrs:{id:"数字-number"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数字-number"}},[a._v("#")]),a._v(" 数字    Number")]),a._v(" "),t("p",[t("em",[a._v("一个实数常量.")])]),a._v(" "),t("ul",[t("li",[t("code",[a._v("数字")]),a._v(":无解释")])]),a._v(" "),t("h2",{attrs:{id:"字符串-string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#字符串-string"}},[a._v("#")]),a._v(" 字符串    String")]),a._v(" "),t("p",[t("em",[a._v("由选定的字符串和指定的值构成的文本.")])]),a._v(" "),t("ul",[t("li",[t("code",[a._v("字符")]),a._v(":结果文本.花括号中的数字将被相应的值替代.")]),a._v(" "),t("li",[t("code",[a._v("{0}")]),a._v(":此值将转换为文本并用于替代{0}.")]),a._v(" "),t("li",[t("code",[a._v("{1}")]),a._v(":此值将转换为文本并用于替代{1}.")]),a._v(" "),t("li",[t("code",[a._v("{2}")]),a._v(":此值将转换为文本并用于替代{2}.")])]),a._v(" "),t("h2",{attrs:{id:"自定义字符串-custom-string"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义字符串-custom-string"}},[a._v("#")]),a._v(" 自定义字符串    Custom String")]),a._v(" "),t("p",[t("em",[a._v("可以输入值的自定义文本.")])]),a._v(" "),t("ul",[t("li",[t("code",[a._v("字符")]),a._v(":返回的文本. 花括号中的数字将被相应的值取代. (如果想在文本中使用花括号中的数字, 请使用两次花括号.)")]),a._v(" "),t("li",[t("code",[a._v("{0}")]),a._v(":此值将转换为文本并用于替代{0}.")]),a._v(" "),t("li",[t("code",[a._v("{1}")]),a._v(":此值将转换为文本并用于替代{1}.")]),a._v(" "),t("li",[t("code",[a._v("{2}")]),a._v(":此值将转换为文本并用于替代{2}.")])]),a._v(" "),t("h2",{attrs:{id:"英雄-常量-hero"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#英雄-常量-hero"}},[a._v("#")]),a._v(" 英雄(常量)    Hero")]),a._v(" "),t("p",[t("em",[a._v("一个英雄常量.")])]),a._v(" "),t("h2",{attrs:{id:"无-null"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#无-null"}},[a._v("#")]),a._v(" 无    Null")]),a._v(" "),t("p",[t("em",[a._v("一名玩家已离开.当没有玩家进行输入时使用.在用来比较或测试时等效于实数 0.")])]),a._v(" "),t("h2",{attrs:{id:"队伍-队伍常数-team"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#队伍-队伍常数-team"}},[a._v("#")]),a._v(" 队伍(队伍常数)    Team")]),a._v(" "),t("p",[t("em",[a._v('一个队伍常数."全部"选顶代表队伍模式中的两支队伍,或自由混战模式中的全部玩家.')])]),a._v(" "),t("ul",[t("li",[t("code",[a._v("队伍")]),a._v(':一个队伍常数."全部"选项代表队伍模式中的两支队伍,自由混战模式中的全部玩家.')])])])}),[],!1,null,null,null);e.default=s.exports}}]);